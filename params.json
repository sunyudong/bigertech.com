{"name":"Bigertech.com","tagline":"笔戈博客","body":"\r\n\r\n#### Quickstart: \r\n```\r\ndatabase: {\r\n            client: 'mysql',\r\n            connection: {\r\n                host     : '127.0.0.1',\r\n                user     : 'root',\r\n                password : 'root',\r\n                database : 'bigertech_blog',\r\n                charset  : 'UTF8_GENERAL_CI'\r\n            }\r\n        },\r\n\r\n```\r\n\r\n在控制台，切换到工作目录，执行以下命令\r\n\r\n1. `npm install -g grunt-cli`\r\n1. `npm install`\r\n1. `grunt init` (and `grunt prod` if you want to run Ghost in production mode)\r\n1. `npm start`\r\n\r\n### Production\r\n\r\n在`config.example.js`中，新增了`cdn`配置，配置项如下：\r\n\r\n```Javascript\r\nisProduction: 配置是否线上环境（NODE_ENV=production，待改进）\r\n\r\nstaticAssetsUrl: 静态资源CDN, 如css, js等\r\n\r\ndynamicAssetsUrl: 动态资源, 如用户上传的图片等\r\n\r\nsyncImagesPath: 同步文件到CDN服务器上的路径\r\n```\r\n\r\n### Images cutting\r\n\r\n`config.example.js`中的`images`选项可以配置后台上传图片是否进行裁剪，以及裁剪的大小尺寸等，可配置项如下：\r\n\r\n```\r\ndir: 裁剪的图片存放路径，比如 300x200，那么生成的裁剪图片将会在 config.paths.imagesPath/300x200/ 下存放。\r\n\r\ncutWidth: 裁剪的宽度\r\n\r\ncutHeight: 裁剪的高度\r\n```\r\n\r\n以上三项任意一项留空都不会对图片进行裁剪处理。\r\n\r\n## 后台插入文章类别和模板对应关系\r\n编辑文章界面可以选择文章的类型，如果是视频 则需要在 tag 中的第一个位置插入，优酷的视频ID\r\n\r\n文章类型    | 前端模板\r\n----|-------\r\n文字博客  | post-article.hbs\r\n评测视频  | post-video.hbs\r\n活动宣传  | post-active.hbs\r\n专题      | post-topic.hbs\r\n\r\n## 接口部分\r\n\r\n接口一律使用`Promise`支持。\r\n\r\n### 专题接口 - Positions\r\n\r\n```\r\n\r\n// 得到指定ID专题下的所有文章\r\ngetPostsByPositionId(postId);\r\n\r\n// eg:\r\ngetPostsByPositionId(1).then(function(posts) {\r\n    if (posts === null) {\r\n        console.log('ID对应的专题不存在！');\r\n        return when.reject(new NotFoundError());\r\n    }\r\n\r\n    posts.forEach(function(post) {\r\n        // ... some code\r\n    });\r\n});\r\n\r\n// 得到指定Slug专题下的所有文章\r\ngetPostsByPositionId(slug);\r\n\r\n// eg:\r\ngetPostsByPositionSlug('news').then(function(posts) {\r\n    if (posts === null) {\r\n        console.log('Sulg对应的专题不存在！');\r\n        return when.reject(new NotFoundError());\r\n    }\r\n\r\n    posts.forEach(function(post) {\r\n        // ... some code\r\n    });\r\n});\r\n\r\n// 得到指定Name专题下的所有文章\r\ngetPostsByPositionName(name);\r\n\r\n// eg:\r\ngetPostsByPositionName('新闻专题').then(function(posts) {\r\n    if (posts === null) {\r\n        console.log('Name对应的专题不存在！');\r\n        return when.reject(new NotFoundError());\r\n    }\r\n\r\n    posts.forEach(function(post) {\r\n        // ... some code\r\n    });\r\n});\r\n\r\n// 得到所有的专题\r\nfindAll(options).then(function(positions) {});\r\n\r\n// 得到一个指定的专题\r\n// { id: id } 或者 { name: 'news' } 等等\r\nfindOne(options).then(function(position) {});\r\n\r\n// 更新一个专题信息\r\nedit(data, options);\r\n\r\n// 添加一个专题信息\r\nadd(data, options);\r\n\r\n// 删除一个专题信息\r\ndestroy(options);\r\n```\r\n\r\n## 长微博\r\n\r\n长微博的生成采用的是模拟浏览器截图的原理来生成的，使用的是`phantomjs`环境。\r\n\r\n### phantomjs ###\r\n\r\n确保当前服务器环境需要安装好[phantomjs](http://phantomjs.org/)。\r\n\r\n### 长微博文章页 ###\r\n\r\n```\r\nchangweiboPage/:slug\r\n```\r\n\r\n### 长微博预览页 ###\r\n\r\n```\r\nchangweibo/:slug\r\n```\r\n\r\n## 新增改动\r\n*  文章类别选择\r\n*  每篇文章加入 文章图片\r\n*  默认文章url为标题的拼音链接， 修改为数字\r\n*  文章在界面中的位置指定\r\n*  点赞功能\r\n*  多说评论\r\n*  百度统计\r\n*  图片自动裁剪\r\n*  线上环境CDN资源切换\r\n\r\n## Copyright & License\r\n笔戈科技出品\r\n\r\nCopyright (c) 2013-2014 Ghost Foundation - Released under the [MIT license](LICENSE).\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}